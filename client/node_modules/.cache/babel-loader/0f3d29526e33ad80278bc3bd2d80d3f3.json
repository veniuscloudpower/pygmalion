{"remainingRequest":"C:\\projects\\kube-dashboard\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\projects\\kube-dashboard\\client\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\projects\\kube-dashboard\\client\\src\\store\\modules\\menu.js","dependencies":[{"path":"C:\\projects\\kube-dashboard\\client\\src\\store\\modules\\menu.js","mtime":1627060428148},{"path":"C:\\projects\\kube-dashboard\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\kube-dashboard\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\projects\\kube-dashboard\\client\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport MenuService from \"../../services/menu.service\";\nvar state = {\n  data: MenuService.getMenu(),\n  searchData: [],\n  togglesidebar: true\n}; // getters\n\nvar getters = {}; // mutations\n\nvar mutations = {\n  opensidebar: function opensidebar(state) {\n    state.togglesidebar = !state.togglesidebar;\n  },\n  resizetoggle: function resizetoggle(state) {\n    if (window.innerWidth < 1199) {\n      state.togglesidebar = false;\n    } else {\n      state.togglesidebar = true;\n    }\n  },\n  searchTerm: function searchTerm(state, term) {\n    var items = [];\n    var searchval = term.toLowerCase();\n    state.data.filter(function (menuItems) {\n      if (menuItems.title) {\n        if (menuItems.title.toLowerCase().includes(searchval) && menuItems.type === 'link') {\n          items.push(menuItems);\n        }\n\n        if (!menuItems.children) return false;\n        menuItems.children.filter(function (subItems) {\n          if (subItems.title.toLowerCase().includes(searchval) && subItems.type === 'link') {\n            subItems.icon = menuItems.icon;\n            items.push(subItems);\n          }\n\n          if (!subItems.children) return false;\n          subItems.children.filter(function (suSubItems) {\n            if (suSubItems.title.toLowerCase().includes(searchval)) {\n              suSubItems.icon = menuItems.icon;\n              items.push(suSubItems);\n            }\n          });\n        });\n        state.searchData = items;\n      }\n    });\n  },\n  setNavActive: function setNavActive(state, item) {\n    if (!item.active) {\n      state.data.forEach(function (a) {\n        if (state.data.includes(item)) a.active = false;\n        if (!a.children) return false;\n        a.children.forEach(function (b) {\n          if (a.children.includes(item)) {\n            b.active = false;\n          }\n        });\n      });\n    }\n\n    item.active = !item.active;\n  },\n  setActiveRoute: function setActiveRoute(state, item) {\n    state.data.filter(function (menuItem) {\n      if (menuItem != item) menuItem.active = false;\n      if (menuItem.children && menuItem.children.includes(item)) menuItem.active = true;\n\n      if (menuItem.children) {\n        menuItem.children.filter(function (submenuItems) {\n          if (submenuItems.children && submenuItems.children.includes(item)) {\n            menuItem.active = true;\n            submenuItems.active = true;\n          }\n        });\n      }\n    });\n  }\n}; // actions\n\nvar actions = {\n  opensidebar: function opensidebar(context, term) {\n    context.commit('opensidebar', term);\n  },\n  resizetoggle: function resizetoggle(context, term) {\n    context.commit('resizetoggle', term);\n  },\n  searchTerm: function searchTerm(context, term) {\n    context.commit('searchTerm', term);\n  },\n  setNavActive: function setNavActive(context, item) {\n    context.commit('setNavActive', item);\n  },\n  setActiveRoute: function setActiveRoute(context, item) {\n    context.commit('setActiveRoute', item);\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["C:/projects/kube-dashboard/client/src/store/modules/menu.js"],"names":["MenuService","state","data","getMenu","searchData","togglesidebar","getters","mutations","opensidebar","resizetoggle","window","innerWidth","searchTerm","term","items","searchval","toLowerCase","filter","menuItems","title","includes","type","push","children","subItems","icon","suSubItems","setNavActive","item","active","forEach","a","b","setActiveRoute","menuItem","submenuItems","actions","context","commit","namespaced"],"mappings":"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","sourcesContent":["import MenuService from '../../services/menu.service'\n\n\nconst state = {\n  data: MenuService.getMenu(),\n  searchData: [],\n  togglesidebar: true\n}\n\n// getters\nconst getters = {\n\n}\n\n// mutations\nconst mutations = {\n  opensidebar: (state) => {\n    state.togglesidebar = !state.togglesidebar\n  },\n  resizetoggle: (state) => {\n    if (window.innerWidth < 1199) {\n      state.togglesidebar = false\n    } else {\n      state.togglesidebar = true\n    }\n  },\n  searchTerm: (state, term) => {\n    let items = [];\n    var searchval = term.toLowerCase();\n    state.data.filter(menuItems => {\n      if (menuItems.title) {\n        if (menuItems.title.toLowerCase().includes(searchval) && menuItems.type === 'link') {\n          items.push(menuItems);\n        }\n        if (!menuItems.children) return false\n        menuItems.children.filter(subItems => {\n          if (subItems.title.toLowerCase().includes(searchval) && subItems.type === 'link') {\n            subItems.icon = menuItems.icon\n            items.push(subItems);\n          }\n          if (!subItems.children) return false\n          subItems.children.filter(suSubItems => {\n            if (suSubItems.title.toLowerCase().includes(searchval)) {\n              suSubItems.icon = menuItems.icon\n              items.push(suSubItems);\n            }\n          })\n        })\n        state.searchData = items\n      }\n    });\n  },\n  setNavActive: (state, item) => {\n    if (!item.active) {\n      state.data.forEach(a => {\n        if (state.data.includes(item))\n          a.active = false\n        if (!a.children) return false\n        a.children.forEach(b => {\n          if (a.children.includes(item)) {\n            b.active = false\n          }\n        })\n      });\n    }\n    item.active = !item.active\n  },\n  setActiveRoute: (state, item) => {\n    state.data.filter(menuItem => {\n      if (menuItem != item)\n        menuItem.active = false\n      if (menuItem.children && menuItem.children.includes(item))\n        menuItem.active = true\n      if (menuItem.children) {\n        menuItem.children.filter(submenuItems => {\n          if (submenuItems.children && submenuItems.children.includes(item)) {\n            menuItem.active = true\n            submenuItems.active = true\n          }\n        })\n      }\n    })\n  }\n};\n\n// actions\nconst actions = {\n  opensidebar: (context, term) => {\n    context.commit('opensidebar', term)\n  },\n  resizetoggle: (context, term) => {\n    context.commit('resizetoggle', term)\n  },\n  searchTerm: (context, term) => {\n    context.commit('searchTerm', term)\n  },\n  setNavActive: (context, item) => {\n    context.commit('setNavActive', item)\n  },\n  setActiveRoute: (context, item) => {\n    context.commit('setActiveRoute', item)\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations\n}"]}]}