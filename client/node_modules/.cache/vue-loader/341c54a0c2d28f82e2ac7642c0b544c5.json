{"remainingRequest":"C:\\projects\\kube-dashboard\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\projects\\kube-dashboard\\client\\src\\components\\body.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\projects\\kube-dashboard\\client\\src\\components\\body.vue","mtime":1605953770000},{"path":"C:\\projects\\kube-dashboard\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\kube-dashboard\\client\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\kube-dashboard\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\projects\\kube-dashboard\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\kube-dashboard\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from \"vuex\";\nimport Header from './header'\nimport Sidebar from './sidebar'\nimport Footer from './footer'\nimport Customizer from './customizer'\n\nexport default {\n  name: 'mainpage',\n  data(){\n    return{\n      mobileheader_toggle_var: false,\n      sidebar_toggle_var: false,\n      horizontal_Sidebar: true,\n      resized:false\n    }\n  },\n  // props:['sidebar_toggle_var'],\n  components:{\n    Header,\n    Sidebar,\n    Footer,\n    Customizer\n  },\n  computed: {\n    ...mapState({\n      menuItems: state => state.menu.data,\n      layout: state => state.layout.layout,\n      togglesidebar: (state) => state.menu.togglesidebar\n    })\n  },\n  created(){\n    window.addEventListener('resize', this.handleResize)\n    this.handleResize();\n    this.resized = this.sidebar_toggle_var;\n    this.$store.dispatch('layout/set')\n  },\n  watch:{\n    '$route' (){\n      this.menuItems.filter(items => {\n        if (items.path === this.$route.path)\n          this.$store.dispatch('menu/setActiveRoute', items)\n        if (!items.children) return false\n        items.children.filter(subItems => {\n          if (subItems.path === this.$route.path)\n            this.$store.dispatch('menu/setActiveRoute', subItems)\n          if (!subItems.children) return false\n          subItems.children.filter(subSubItems => {\n            if (subSubItems.path === this.$route.path)\n              this.$store.dispatch('menu/setActiveRoute', subSubItems)\n          })\n        })\n      })\n    },\n    sidebar_toggle_var: function (){\n      this.resized = (this.width <= 991) ? !this.sidebar_toggle_var : this.sidebar_toggle_var      \n    }\n  },\n  methods:{\n    sidebar_toggle(value) {\n      this.sidebar_toggle_var = !value\n    },\n    mobiletoggle_toggle(value) {\n      this.mobileheader_toggle_var = value\n    },\n    handleResize() {\n      this.$store.dispatch(\"menu/resizetoggle\");\n    }\n  }\n}\n",{"version":3,"sources":["body.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"body.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div class=\"page-wrapper\" :class=\"layout.settings.sidebar.type == 'horizontal_sidebar' ? 'horizontal-wrapper' : 'compact-wrapper'\">\n      <div class=\"page-header\" :class=\"{ close_icon:!togglesidebar }\">\n        <Header @clicked=\"sidebar_toggle\" />\n      </div>\n      <div class=\"page-body-wrapper\" :class=\"layout.settings.sidebar.type == 'horizontal_sidebar' ? 'horizontal-menu' : 'sidebar-icon'\">\n        <div class=\"sidebar-wrapper\" :class=\"[{ close_icon : !togglesidebar }, layout.settings.sidebar_backround]\" :sidebar-layout=\"layout.settings.sidebar_setting\">\n          <Sidebar @clicked=\"sidebar_toggle\" />\n        </div>\n        <div class=\"page-body\">\n          <transition name=\"fadeIn\" enter-active-class=\"animated fadeIn\">\n           <router-view class=\"view\"></router-view>\n          </transition>\n        </div>\n        <Footer/>\n      </div>\n      <Customizer/>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport Header from './header'\nimport Sidebar from './sidebar'\nimport Footer from './footer'\nimport Customizer from './customizer'\n\nexport default {\n  name: 'mainpage',\n  data(){\n    return{\n      mobileheader_toggle_var: false,\n      sidebar_toggle_var: false,\n      horizontal_Sidebar: true,\n      resized:false\n    }\n  },\n  // props:['sidebar_toggle_var'],\n  components:{\n    Header,\n    Sidebar,\n    Footer,\n    Customizer\n  },\n  computed: {\n    ...mapState({\n      menuItems: state => state.menu.data,\n      layout: state => state.layout.layout,\n      togglesidebar: (state) => state.menu.togglesidebar\n    })\n  },\n  created(){\n    window.addEventListener('resize', this.handleResize)\n    this.handleResize();\n    this.resized = this.sidebar_toggle_var;\n    this.$store.dispatch('layout/set')\n  },\n  watch:{\n    '$route' (){\n      this.menuItems.filter(items => {\n        if (items.path === this.$route.path)\n          this.$store.dispatch('menu/setActiveRoute', items)\n        if (!items.children) return false\n        items.children.filter(subItems => {\n          if (subItems.path === this.$route.path)\n            this.$store.dispatch('menu/setActiveRoute', subItems)\n          if (!subItems.children) return false\n          subItems.children.filter(subSubItems => {\n            if (subSubItems.path === this.$route.path)\n              this.$store.dispatch('menu/setActiveRoute', subSubItems)\n          })\n        })\n      })\n    },\n    sidebar_toggle_var: function (){\n      this.resized = (this.width <= 991) ? !this.sidebar_toggle_var : this.sidebar_toggle_var      \n    }\n  },\n  methods:{\n    sidebar_toggle(value) {\n      this.sidebar_toggle_var = !value\n    },\n    mobiletoggle_toggle(value) {\n      this.mobileheader_toggle_var = value\n    },\n    handleResize() {\n      this.$store.dispatch(\"menu/resizetoggle\");\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n\n</style>\n"]}]}