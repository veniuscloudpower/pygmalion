{"remainingRequest":"C:\\projects\\kube-dashboard\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\projects\\kube-dashboard\\client\\src\\components\\customizer.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\projects\\kube-dashboard\\client\\src\\components\\customizer.vue","mtime":1604398302000},{"path":"C:\\projects\\kube-dashboard\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\kube-dashboard\\client\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\kube-dashboard\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\projects\\kube-dashboard\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\projects\\kube-dashboard\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from \"vuex\";\nexport default {\n  name: \"customizer\",\n  data() {\n    return {\n      customizer: \"\",\n      sidebarSetting: \"color\",\n      layoutType: \"ltr\",\n      sidebarType: \"default\",\n      mixLayout: \"default\",\n      styleObject: {\n        position: \"fixed\",\n        left: \"0\",\n        top: \"0\",\n        opacity: \"0\",\n      },\n    };\n  },\n  mounted() {\n    this.layout.color.color = localStorage.getItem(\"color\");\n    this.layout.color.primary_color = localStorage.getItem(\"primary_color\");\n    this.layout.color.secondary_color = localStorage.getItem(\"secondary_color\");\n  },\n  computed: {\n    ...mapState({\n      layout: (state) => state.layout.layout,\n      data: (state) => JSON.stringify(state.layout.layout),\n    }),\n  },\n  methods: {\n    openCustomizerSetting(val) {\n      this.customizer = val;\n    },\n    customizerSetting(val) {\n      this.sidebarSetting = val;\n    },\n    customizeLayoutType(val) {\n      this.$store.dispatch(\"layout/setLayoutType\", val);\n      this.layoutType = val;\n    },\n    customizeSidebarType(val) {\n      console.log(val);\n      this.$store.dispatch(\"layout/setCustomizeSidebarType\", val);\n    },\n    customizeSidebarSetting(val) {\n      console.log(val);\n      this.layout.settings.sidebar_setting = val;\n    },\n    customizeSidebarBackround(val) {\n      this.layout.settings.sidebar_backround = val;\n    },\n    customizeMixLayout(val) {\n      this.mixLayout = val;\n      this.$store.dispatch(\"layout/setLayout\", val);\n    },\n    customizeColor() {\n      const primary = document.getElementById(\"ColorPicker1\").value;\n      const secondary = document.getElementById(\"ColorPicker2\").value;\n      this.$store.dispatch(\"layout/setColorScheme\", {primary, secondary});\n    },\n    resetColor() {\n      localStorage.setItem(\"primary_color\", \"#7366ff\");\n      localStorage.setItem(\"secondary_color\", \"#f73164\");\n      window.location.reload();\n    },\n    customizeDarkColorScheme(val) {\n      this.$store.dispatch(\"layout/setColorDarkScheme\", val);\n    },\n    copyText() {\n      this.$refs.layout.select();\n      document.execCommand(\"copy\");\n      this.$toasted.show(\"Code Copied to clipboard\", {\n        theme: \"outline\",\n        position: \"top-right\",\n        type: \"default\",\n        duration: 2000,\n      });\n    },\n  },\n};\n",{"version":3,"sources":["customizer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"customizer.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div class=\"customizer-links\" :class=\"{ open: customizer }\">\n      <div class=\"nav flex-column nac-pills\" id=\"c-pills-tab\">\n        <a\n          class=\"nav-link\"\n          :class=\"{ 'active show': customizer == 'settings' }\"\n          id=\"c-pills-home-tab\"\n          @click=\"openCustomizerSetting('settings')\"\n          href=\"javascript:void(0)\"\n        >\n          <div class=\"settings\">\n            <i class=\"icon-settings\"></i>\n          </div>\n          <span>Quick option</span>\n        </a>\n        <a\n          class=\"nav-link\"\n          target=\"_blank\"\n          href=\"https://pixelstrap.freshdesk.com/\"\n        >\n          <div>\n            <i class=\"icon-support\"></i>\n          </div>\n          <span>Support</span>\n        </a>\n        <a\n          class=\"nav-link\"\n          target=\"_blank\"\n          href=\"http://admin.pixelstrap.com/cuba/document/index.html\"\n        >\n          <div>\n            <i class=\"icon-settings\"></i>\n          </div>\n          <span>Document</span>\n        </a>\n        <a\n          class=\"nav-link\"\n          target=\"_blank\"\n          href=\"http://admin.pixelstrap.com/cuba/theme/landing-page.html#frameworks\"\n        >\n          <div>\n            <i class=\"icon-panel\"></i>\n          </div>\n          <span>Check features</span>\n        </a>\n        <a\n          class=\"nav-link\"\n          target=\"_blank\"\n          href=\"https://1.envato.market/3GVzd\"\n        >\n          <div>\n            <i class=\"icon-shopping-cart-full\"></i>\n          </div>\n          <span>Buy now</span>\n        </a>\n      </div>\n    </div>\n    <div class=\"customizer-contain\" :class=\"{ open: customizer }\">\n      <div class=\"tab-content\">\n        <div class=\"customizer-header\">\n          <i class=\"icofont-close icon-close\" @click=\"customizer = ''\"></i>\n          <h5>Customizer</h5>\n          <p class=\"mb-0\">Try It Real Time <i class=\"fa fa-thumbs-o-up txt-primary\"></i></p>\n          <button\n            v-b-modal.modal-customizer\n            class=\"btn btn-primary plus-popup mt-2\"\n          >\n            Configuration\n          </button>\n          <b-modal\n            id=\"modal-customizer\"\n            title=\"Modal Title\"\n            class=\"theme-modal\"\n          >\n            <div class=\"modal-header modal-copy-header\">\n              <h5 class=\"headerTitle mb-0\">Customizer configuration</h5>\n            </div>\n            <div class=\"modal-body\">\n              <div class=\"config-popup\">\n                <p>\n                  To replace our design with your desired theme. Please do\n                  configuration as mention\n                </p>\n                <p>\n                  <b>Path : src > data > layout.json</b>\n                </p>\n                <div>\n                  <pre>\n\t\t\t\t\t\t\t\t\t\t<code>\n\t\t\t\t\t\t\t\t\t\t\t<b-form-textarea :value=\"data\" ref=\"layout\" rows=\"1\" v-bind:style=\"styleObject\"></b-form-textarea>\n\t\t\t\t\t\t\t\t\t\t\t{{layout}}\n\t\t\t\t\t\t\t\t\t\t</code>\n\t\t\t\t\t\t\t\t\t</pre>\n                </div>\n                <button class=\"btn btn-primary mt-2\" @click=\"copyText()\">\n                  Copy Json\n                </button>\n              </div>\n            </div>\n          </b-modal>\n        </div>\n        <div class=\"customizer-body custom-scrollbar\">\n          <div class=\"tab-pane fade active show\" id=\"c-pills-home\">\n            <h6>Layout Type</h6>\n            <ul class=\"main-layout layout-grid\">\n              <li data-attr=\"ltr\"\n                :class=\"{ active: layoutType == 'ltr' }\"\n                @click=\"customizeLayoutType('ltr')\">\n                <div class=\"header bg-light\">\n                  <ul>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                  </ul>\n                </div>\n                <div class=\"body\">\n                  <ul>\n                    <li class=\"bg-light sidebar\"></li>\n                    <li class=\"bg-light body\">\n                      <span class=\"badge badge-primary\">LTR</span>\n                    </li>\n                  </ul>\n                </div>\n              </li>\n              <li data-attr=\"rtl\"\n                :class=\"{ active: layoutType == 'rtl' }\"\n                @click=\"customizeLayoutType('rtl')\">\n                <div class=\"header bg-light\">\n                  <ul>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                  </ul>\n                </div>\n                <div class=\"body\">\n                  <ul>\n                    <li class=\"bg-light body\">\n                      <span class=\"badge badge-primary\">RTL</span>\n                    </li>\n                    <li class=\"bg-light sidebar\"></li>\n                  </ul>\n                </div>\n              </li>\n              <li data-attr=\"box\"\n                :class=\"{ active: layoutType == 'box-layout' }\"\n                @click=\"customizeLayoutType('box-layout')\" class=\"box-layout px-3\">\n                <div class=\"header bg-light\">\n                  <ul>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                  </ul>\n                </div>\n                <div class=\"body\">\n                  <ul>\n                    <li class=\"bg-light sidebar\"></li>\n                    <li class=\"bg-light body\">\n                      <span class=\"badge badge-primary\">Box</span>\n                    </li>\n                  </ul>\n                </div>\n              </li>\n            </ul>\n            <h6 class=\"\">Sidebar Type</h6>\n            <ul class=\"sidebar-type layout-grid\">\n              <li \n                data-attr=\"horizontal-sidebar\"\n                class=\"horizontal-sidebar\"\n                :class=\"{\n                  active: layout.settings.sidebar.type == 'horizontal_sidebar',\n                }\"\n                @click=\"customizeSidebarType('horizontal')\">\n                <div class=\"header bg-light\">\n                  <ul>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                  </ul>\n                </div>\n                <div class=\"body\">\n                  <ul>\n                    <li class=\"bg-dark sidebar\"></li>\n                    <li class=\"bg-light body\"></li>\n                  </ul>\n                </div>\n              </li>\n              <li\n                data-attr=\"default-sidebar\"\n                :class=\"{ active: layout.settings.sidebar.type == 'default' }\"\n                @click=\"customizeSidebarType('default')\">\n                <div class=\"header bg-light\">\n                  <ul>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                  </ul>\n                </div>\n                <div class=\"body\">\n                  <ul>\n                    <li class=\"bg-dark sidebar compact\"></li>\n                    <li class=\"bg-light body\"></li>\n                  </ul>\n                </div>\n              </li>\n            </ul>\n            <h6 class=\"\">Sidebar settings</h6>\n            <ul class=\"sidebar-setting layout-grid\">\n              <li\n              data-attr=\"default-sidebar\"\n                :class=\"{\n                  active: layout.settings.sidebar_setting == 'default-sidebar',\n                }\"\n                @click=\"customizeSidebarSetting('default-sidebar')\">\n                <div class=\"header bg-light\">\n                  <ul>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                  </ul>\n                </div>\n                <div class=\"body bg-light\">\n                  <span class=\"badge badge-primary\">Default</span>\n                </div>\n              </li>\n              <li\n              data-attr=\"border-sidebar\"\n                :class=\"{\n                  active: layout.settings.sidebar_setting == 'border-sidebar',\n                }\"\n                @click=\"customizeSidebarSetting('border-sidebar')\">\n                <div class=\"header bg-light\">\n                  <ul>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                  </ul>\n                </div>\n                <div class=\"body bg-light\">\n                  <span class=\"badge badge-primary\">Border</span>\n                </div>\n              </li>\n              <li\n              data-attr=\"iconcolor-sidebar\"\n                :class=\"{\n                  active:\n                    layout.settings.sidebar_setting == 'iconcolor-sidebar',\n                }\"\n                @click=\"customizeSidebarSetting('iconcolor-sidebar')\">\n                <div class=\"header bg-light\">\n                  <ul>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                  </ul>\n                </div>\n                <div class=\"body bg-light\">\n                  <span class=\"badge badge-primary\">icon Color</span>\n                </div>\n              </li>\n            </ul>\n            <h6 class=\"\">Unlimited Color</h6>\n            <ul class=\"layout-grid unlimited-color-layout\">\n              <input\n                id=\"ColorPicker1\"\n                type=\"color\"\n                value=\"#7366ff\"\n                name=\"Background\"\n              />\n              <input\n                id=\"ColorPicker2\"\n                type=\"color\"\n                value=\"#f73164\"\n                name=\"Background\"\n              />\n              <button\n                type=\"button\"\n                class=\"color-apply-btn btn btn-primary color-apply-btn\"\n                @click=\"customizeColor\"\n              >\n                Apply\n              </button>\n              <button\n                type=\"button\"\n                class=\"color-apply-btn btn btn-primary color-reset-btn ml-2\"\n                @click=\"resetColor\"\n              >\n                Reset\n              </button>\n            </ul>\n            <h6 class=\"\">Mix Layout</h6>\n            <ul class=\"layout-grid customizer-mix\">\n              <li class=\"color-layout\" \n                data-attr=\"light-only\"\n                :class=\"{ active: mixLayout == 'light-only' }\"\n                @click=\"customizeMixLayout('light-only')\">\n                <div class=\"header bg-light\">\n                  <ul>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                  </ul>\n                </div>\n                <div class=\"body\">\n                  <ul>\n                    <li class=\"bg-light sidebar\"></li>\n                    <li class=\"bg-light body\"></li>\n                  </ul>\n                </div>\n              </li>\n              <li class=\"color-layout\" data-attr=\"dark-sidebar\"\n                :class=\"{ active: mixLayout == 'dark-sidebar' }\"\n                @click=\"customizeMixLayout('dark-sidebar')\">\n                <div class=\"header bg-light\">\n                  <ul>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                  </ul>\n                </div>\n                <div class=\"body\">\n                  <ul>\n                    <li class=\"bg-dark sidebar\"></li>\n                    <li class=\"bg-light body\"></li>\n                  </ul>\n                </div>\n              </li>\n              <li class=\"color-layout\" data-attr=\"dark-only\"\n                :class=\"{ active: mixLayout == 'dark-only' }\"\n                @click=\"customizeMixLayout('dark-only')\">\n                <div class=\"header bg-dark\">\n                  <ul>\n                    <li></li>\n                    <li></li>\n                    <li></li>\n                  </ul>\n                </div>\n                <div class=\"body\">\n                  <ul>\n                    <li class=\"bg-dark sidebar\"></li>\n                    <li class=\"bg-dark body\"></li>\n                  </ul>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { mapState } from \"vuex\";\nexport default {\n  name: \"customizer\",\n  data() {\n    return {\n      customizer: \"\",\n      sidebarSetting: \"color\",\n      layoutType: \"ltr\",\n      sidebarType: \"default\",\n      mixLayout: \"default\",\n      styleObject: {\n        position: \"fixed\",\n        left: \"0\",\n        top: \"0\",\n        opacity: \"0\",\n      },\n    };\n  },\n  mounted() {\n    this.layout.color.color = localStorage.getItem(\"color\");\n    this.layout.color.primary_color = localStorage.getItem(\"primary_color\");\n    this.layout.color.secondary_color = localStorage.getItem(\"secondary_color\");\n  },\n  computed: {\n    ...mapState({\n      layout: (state) => state.layout.layout,\n      data: (state) => JSON.stringify(state.layout.layout),\n    }),\n  },\n  methods: {\n    openCustomizerSetting(val) {\n      this.customizer = val;\n    },\n    customizerSetting(val) {\n      this.sidebarSetting = val;\n    },\n    customizeLayoutType(val) {\n      this.$store.dispatch(\"layout/setLayoutType\", val);\n      this.layoutType = val;\n    },\n    customizeSidebarType(val) {\n      console.log(val);\n      this.$store.dispatch(\"layout/setCustomizeSidebarType\", val);\n    },\n    customizeSidebarSetting(val) {\n      console.log(val);\n      this.layout.settings.sidebar_setting = val;\n    },\n    customizeSidebarBackround(val) {\n      this.layout.settings.sidebar_backround = val;\n    },\n    customizeMixLayout(val) {\n      this.mixLayout = val;\n      this.$store.dispatch(\"layout/setLayout\", val);\n    },\n    customizeColor() {\n      const primary = document.getElementById(\"ColorPicker1\").value;\n      const secondary = document.getElementById(\"ColorPicker2\").value;\n      this.$store.dispatch(\"layout/setColorScheme\", {primary, secondary});\n    },\n    resetColor() {\n      localStorage.setItem(\"primary_color\", \"#7366ff\");\n      localStorage.setItem(\"secondary_color\", \"#f73164\");\n      window.location.reload();\n    },\n    customizeDarkColorScheme(val) {\n      this.$store.dispatch(\"layout/setColorDarkScheme\", val);\n    },\n    copyText() {\n      this.$refs.layout.select();\n      document.execCommand(\"copy\");\n      this.$toasted.show(\"Code Copied to clipboard\", {\n        theme: \"outline\",\n        position: \"top-right\",\n        type: \"default\",\n        duration: 2000,\n      });\n    },\n  },\n};\n</script>"]}]}